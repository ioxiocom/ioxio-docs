import{s as Be,a as r,f as m,l as p,c as l,g as f,z as A,h as $e,m as d,d as i,j as J,A as je,i as s,y as T}from"../chunks/scheduler.2e48bd10.js";import{S as Ge,i as He,b as c,d as h,m as $,a as g,t as v,e as _}from"../chunks/index.ed958696.js";import{T as Ye,S as Oe}from"../chunks/TableOfContents.c7a57465.js";import{A as K}from"../chunks/A.2ad5f04f.js";import{T as Ne,B as Ve}from"../chunks/Title.0bdb2a75.js";import{M as Fe}from"../chunks/Miro.2e1a5375.js";function Je(u){let a;return{c(){a=p("metadata")},l(n){a=d(n,"metadata")},m(n,o){s(n,a,o)},d(n){n&&i(a)}}}function Ke(u){let a;return{c(){a=p("digital signature")},l(n){a=d(n,"digital signature")},m(n,o){s(n,a,o)},d(n){n&&i(a)}}}function We(u){let a;return{c(){a=p("our sandbox environment")},l(n){a=d(n,"our sandbox environment")},m(n,o){s(n,a,o)},d(n){n&&i(a)}}}function Ze(u){let a;return{c(){a=p("IOXIO Tags™ generator")},l(n){a=d(n,"IOXIO Tags™ generator")},m(n,o){s(n,a,o)},d(n){n&&i(a)}}}function et(u){let a;return{c(){a=p("IOXIO Tags™ scanner")},l(n){a=d(n,"IOXIO Tags™ scanner")},m(n,o){s(n,a,o)},d(n){n&&i(a)}}}function tt(u){let a;return{c(){a=p("source code")},l(n){a=d(n,"source code")},m(n,o){s(n,a,o)},d(n){n&&i(a)}}}function at(u){let a,n,o,b,x,W,E,Z,L,ke=`IOXIO Tags™ are a technology with the primary goal to connect physical world things to
    standardized data on dataspaces. This is accomplished with the combination of QR Codes and
    metadata hosted by those who wish to connect their items to the data. The technology is based on
    existing standards of the Internet, leaves your data in your care in your existing systems, and
    leaves you in control of which Dataspaces you are working with, while allowing 3rd parties to
    freely build their own solutions using the data in the codes. These IOXIO Tags™ provide a way to
    implement Digital Product Passports.`,ee,C,ge,I,ve,te,M,Pe=`There are two types of QR Codes that can be used with IOXIO Tags™, a signed code, and a basic
    URL. The simpler URL based code simply links to tags.ioxio.dev/q/issuer/product/id, which opens
    up our code scanner application, so if you scan it you can quickly read up the information.
    Generation of the URL based codes is incredibly simple for all cases, and they can typically be
    printed at a very small size without issues - in our testing around 2cm x 2cm is fine. Parsing
    of the data from the URLs is also very simple for 3rd party uses.`,ae,O,_e,k,be,ne,S,ie,U,Xe=`The metadata is configuration hosted by the issuer includes information about themselves - e.g.
    logo, as well as the necessary keys to verify their digital signatures, and which dataspace they
    are providing data about their products on. Additionally for every product type they will have
    another metadata file that includes the name, product picture, and which data products (and
    sources for them) the issuer supports for them on the dataspace.`,se,j,qe=`The data from the code can then be combined with the metadata to automatically discover data
    products connected to the physical goods that are provided by the manufacturer.`,oe,B,Re="Digital Product Passport -compatible data products",re,G,De=`To make it easy to connect data with these properties, we designed a standard for creating data
    product definitions that are compatible with the data in the QR codes to make connecting data to
    them easy and convenient for most developers. This has been accomplished by limiting the input
    parameters to always include two properties from the code: the product type, and unique ID.
    These provide enough information to connect the necessary data in a multitude of systems.`,le,P,ye,X,we,ue,H,pe,y,xe,q,Te,R,Ce,D,Ie,de,Y,Qe="Here's an example of how a signed IOXIO Tags™ could look like.",me,Q,ze,fe,N,Ae="And here's an example of how a simple URL based IOXIO Tags™ -tag could look like.",ce,z,Ee,he;return a=new Ne({props:{title:"IOXIO Tags™"}}),o=new Ve({props:{path:u[0].path}}),x=new Oe({props:{title:"Overview"}}),E=new Fe({props:{url:"https://miro.com/app/board/uXjVNfOfDe8=/"}}),I=new K({props:{href:"/tags/metadata/",$$slots:{default:[Je]},$$scope:{ctx:u}}}),k=new K({props:{href:"/tags/signatures/",$$slots:{default:[Ke]},$$scope:{ctx:u}}}),S=new Oe({props:{title:"Metadata"}}),X=new K({props:{href:"https://definitions.sandbox.ioxio-dataspace.com/definitions/DPP/Energy/Battery/ProductDataSheet_v0.1",$$slots:{default:[We]},$$scope:{ctx:u}}}),H=new Oe({props:{title:"Demo"}}),q=new K({props:{href:"https://generator.tags.ioxio.dev",$$slots:{default:[Ze]},$$scope:{ctx:u}}}),R=new K({props:{href:"https://scanner.tags.ioxio.dev",$$slots:{default:[et]},$$scope:{ctx:u}}}),D=new K({props:{href:"https://github.com/ioxiocom/ioxio-tags",$$slots:{default:[tt]},$$scope:{ctx:u}}}),{c(){c(a.$$.fragment),n=r(),c(o.$$.fragment),b=r(),c(x.$$.fragment),W=r(),c(E.$$.fragment),Z=r(),L=m("p"),L.textContent=ke,ee=r(),C=m("p"),ge=p(`The primary contents of the QR Code include 3 properties: the issuer, product type, and unique
    identifier of the individual unit. The issuer is a domain where further
    `),c(I.$$.fragment),ve=p(` can be found, typically the manufacturer of the product. The
    product type is typically e.g. the model number, or stock keeping unit, something that identifies
    clearly the product that is being talked about, but not the individual unit. The unique identifier
    is then e.g. the serial number or similar code that can be used to identify the individual unit as
    accurately as necessary.`),te=r(),M=m("p"),M.textContent=Pe,ae=r(),O=m("p"),_e=p(`The signed code is a bit more complicated, but provides additional benefits. As the name
    implies, it includes a
    `),c(k.$$.fragment),be=p(` as a proof of authenticity of the properties. It
    is however up to whoever is printing the code to ensure that it has adequate anti-tamper measures
    in place to ensure it is not copied or modified in a malicious manner, and that it lasts in the environment
    it will be stored in. The digital signature can be verified via the metadata from the issuer.`),ne=r(),c(S.$$.fragment),ie=r(),U=m("p"),U.textContent=Xe,se=r(),j=m("p"),j.textContent=qe,oe=r(),B=m("h2"),B.textContent=Re,re=r(),G=m("p"),G.textContent=De,le=r(),P=m("p"),ye=p("Check out an example of a definition at "),c(X.$$.fragment),we=p("."),ue=r(),c(H.$$.fragment),pe=r(),y=m("p"),xe=p("You can check out our "),c(q.$$.fragment),Te=p(` and as
    well as `),c(R.$$.fragment),Ce=p(", and their "),c(D.$$.fragment),Ie=p(" to see how these work in practice."),de=r(),Y=m("p"),Y.textContent=Qe,me=r(),Q=m("img"),fe=r(),N=m("p"),N.textContent=Ae,ce=r(),z=m("img"),this.h()},l(e){h(a.$$.fragment,e),n=l(e),h(o.$$.fragment,e),b=l(e),h(x.$$.fragment,e),W=l(e),h(E.$$.fragment,e),Z=l(e),L=f(e,"P",{"data-svelte-h":!0}),A(L)!=="svelte-b0kbmq"&&(L.textContent=ke),ee=l(e),C=f(e,"P",{});var t=$e(C);ge=d(t,`The primary contents of the QR Code include 3 properties: the issuer, product type, and unique
    identifier of the individual unit. The issuer is a domain where further
    `),h(I.$$.fragment,t),ve=d(t,` can be found, typically the manufacturer of the product. The
    product type is typically e.g. the model number, or stock keeping unit, something that identifies
    clearly the product that is being talked about, but not the individual unit. The unique identifier
    is then e.g. the serial number or similar code that can be used to identify the individual unit as
    accurately as necessary.`),t.forEach(i),te=l(e),M=f(e,"P",{"data-svelte-h":!0}),A(M)!=="svelte-12uxwbb"&&(M.textContent=Pe),ae=l(e),O=f(e,"P",{});var V=$e(O);_e=d(V,`The signed code is a bit more complicated, but provides additional benefits. As the name
    implies, it includes a
    `),h(k.$$.fragment,V),be=d(V,` as a proof of authenticity of the properties. It
    is however up to whoever is printing the code to ensure that it has adequate anti-tamper measures
    in place to ensure it is not copied or modified in a malicious manner, and that it lasts in the environment
    it will be stored in. The digital signature can be verified via the metadata from the issuer.`),V.forEach(i),ne=l(e),h(S.$$.fragment,e),ie=l(e),U=f(e,"P",{"data-svelte-h":!0}),A(U)!=="svelte-uznnvp"&&(U.textContent=Xe),se=l(e),j=f(e,"P",{"data-svelte-h":!0}),A(j)!=="svelte-9epdni"&&(j.textContent=qe),oe=l(e),B=f(e,"H2",{"data-svelte-h":!0}),A(B)!=="svelte-suz0r0"&&(B.textContent=Re),re=l(e),G=f(e,"P",{"data-svelte-h":!0}),A(G)!=="svelte-168syix"&&(G.textContent=De),le=l(e),P=f(e,"P",{});var F=$e(P);ye=d(F,"Check out an example of a definition at "),h(X.$$.fragment,F),we=d(F,"."),F.forEach(i),ue=l(e),h(H.$$.fragment,e),pe=l(e),y=f(e,"P",{});var w=$e(y);xe=d(w,"You can check out our "),h(q.$$.fragment,w),Te=d(w,` and as
    well as `),h(R.$$.fragment,w),Ce=d(w,", and their "),h(D.$$.fragment,w),Ie=d(w," to see how these work in practice."),w.forEach(i),de=l(e),Y=f(e,"P",{"data-svelte-h":!0}),A(Y)!=="svelte-1mcjzdt"&&(Y.textContent=Qe),me=l(e),Q=f(e,"IMG",{alt:!0,src:!0,class:!0}),fe=l(e),N=f(e,"P",{"data-svelte-h":!0}),A(N)!=="svelte-e2vw5"&&(N.textContent=Ae),ce=l(e),z=f(e,"IMG",{class:!0,alt:!0,src:!0}),this.h()},h(){J(Q,"alt","example of a signed IOXIO Tag QR code"),je(Q.src,ze="/ioxio-tag-example-signed.png")||J(Q,"src",ze),J(Q,"class","svelte-13ne54r"),J(z,"class","small svelte-13ne54r"),J(z,"alt","example of a basic IOXIO Tag QR code"),je(z.src,Ee="/tags.ioxio.dev_example_string_simple.png")||J(z,"src",Ee)},m(e,t){$(a,e,t),s(e,n,t),$(o,e,t),s(e,b,t),$(x,e,t),s(e,W,t),$(E,e,t),s(e,Z,t),s(e,L,t),s(e,ee,t),s(e,C,t),T(C,ge),$(I,C,null),T(C,ve),s(e,te,t),s(e,M,t),s(e,ae,t),s(e,O,t),T(O,_e),$(k,O,null),T(O,be),s(e,ne,t),$(S,e,t),s(e,ie,t),s(e,U,t),s(e,se,t),s(e,j,t),s(e,oe,t),s(e,B,t),s(e,re,t),s(e,G,t),s(e,le,t),s(e,P,t),T(P,ye),$(X,P,null),T(P,we),s(e,ue,t),$(H,e,t),s(e,pe,t),s(e,y,t),T(y,xe),$(q,y,null),T(y,Te),$(R,y,null),T(y,Ce),$(D,y,null),T(y,Ie),s(e,de,t),s(e,Y,t),s(e,me,t),s(e,Q,t),s(e,fe,t),s(e,N,t),s(e,ce,t),s(e,z,t),he=!0},p(e,t){const V={};t&1&&(V.path=e[0].path),o.$set(V);const F={};t&2&&(F.$$scope={dirty:t,ctx:e}),I.$set(F);const w={};t&2&&(w.$$scope={dirty:t,ctx:e}),k.$set(w);const Le={};t&2&&(Le.$$scope={dirty:t,ctx:e}),X.$set(Le);const Me={};t&2&&(Me.$$scope={dirty:t,ctx:e}),q.$set(Me);const Se={};t&2&&(Se.$$scope={dirty:t,ctx:e}),R.$set(Se);const Ue={};t&2&&(Ue.$$scope={dirty:t,ctx:e}),D.$set(Ue)},i(e){he||(g(a.$$.fragment,e),g(o.$$.fragment,e),g(x.$$.fragment,e),g(E.$$.fragment,e),g(I.$$.fragment,e),g(k.$$.fragment,e),g(S.$$.fragment,e),g(X.$$.fragment,e),g(H.$$.fragment,e),g(q.$$.fragment,e),g(R.$$.fragment,e),g(D.$$.fragment,e),he=!0)},o(e){v(a.$$.fragment,e),v(o.$$.fragment,e),v(x.$$.fragment,e),v(E.$$.fragment,e),v(I.$$.fragment,e),v(k.$$.fragment,e),v(S.$$.fragment,e),v(X.$$.fragment,e),v(H.$$.fragment,e),v(q.$$.fragment,e),v(R.$$.fragment,e),v(D.$$.fragment,e),he=!1},d(e){e&&(i(n),i(b),i(W),i(Z),i(L),i(ee),i(C),i(te),i(M),i(ae),i(O),i(ne),i(ie),i(U),i(se),i(j),i(oe),i(B),i(re),i(G),i(le),i(P),i(ue),i(pe),i(y),i(de),i(Y),i(me),i(Q),i(fe),i(N),i(ce),i(z)),_(a,e),_(o,e),_(x,e),_(E,e),_(I),_(k),_(S,e),_(X),_(H,e),_(q),_(R),_(D)}}}function nt(u){let a,n;return a=new Ye({props:{$$slots:{default:[at]},$$scope:{ctx:u}}}),{c(){c(a.$$.fragment)},l(o){h(a.$$.fragment,o)},m(o,b){$(a,o,b),n=!0},p(o,[b]){const x={};b&3&&(x.$$scope={dirty:b,ctx:o}),a.$set(x)},i(o){n||(g(a.$$.fragment,o),n=!0)},o(o){v(a.$$.fragment,o),n=!1},d(o){_(a,o)}}}function it(u,a,n){let{data:o}=a;return u.$$set=b=>{"data"in b&&n(0,o=b.data)},[o]}class dt extends Ge{constructor(a){super(),He(this,a,it,nt,Be,{data:0})}}export{dt as component};
