import{o as w}from"./scheduler.2e48bd10.js";import{d as o,w as b}from"./index.b93fb93f.js";const t=Object.freeze({sm:0,md:576,lg:992});function p(){const n=b(void 0);return w(()=>{const r={sm:window.matchMedia(`(max-width: ${t.md}px)`),md:window.matchMedia(`(min-width: ${t.md}px) and (max-width: ${t.lg}px)`),lg:window.matchMedia(`(min-width: ${t.lg}px)`)},i=Object.entries(r),d=Object.fromEntries(i.map(([a,e])=>[e.media,a])),m=i.find(([a,e])=>e.matches)[0];n.set(m);function s({matches:a,media:e}){const h=d[e];a&&n.set(h)}return i.forEach(([a,e])=>e.addEventListener("change",s)),()=>{i.forEach(([a,e])=>e.removeEventListener("change",s))}}),{subscribe:n.subscribe,smallerThan:r=>(c(r),o(n,i=>t[i]<t[r])),largerThan:r=>(c(r),o(n,i=>t[i]>t[r]))}}function c(n){if(!(n in t))throw new Error(`"${n}" is not a valid breakpoint size.`)}export{p as b};
